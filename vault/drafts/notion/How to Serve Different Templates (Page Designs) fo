# How to Serve Different Templates (Page Designs) for the Same View (URLs) in Django

Topics: Django

In Django, the same view can render different templates based on various conditions. 

This flexibility allows us to serve different page designs for the same URL. 

## Assumptions:

- We are using namespaced URLs in the project/urls.py file in this format:

`path("", include("app.urls", namespace="app"))`,

- The app/urls.py file is using this format:

`app_name = "app"` and `path("app/", views.index, name="index")`.

## [urls.py](http://urls.py) files

### project/urls.py

We start by configuring our main project URLs to include our application's URLs using the include function. Here is an example of how to do this:

```python
# project/urls.py

from django.urls import path, include

    urlpatterns = [
        path("", include("app.urls", namespace="app")),
    ]
```

- This includes all the URLs defined in app/urls.py under the namespace "app".

### app/urls.py

Next, we define our application's URLs. We are using the path function to map URLs to views:

```python
# app/urls.py

from django.urls import path
from . import views

app_name = "app"

urlpatterns = [
    path("app/", views.index, name="index"),
]
```

- Here, views.index refers to the index view in our application's views.

## [views.py](http://views.py) files

### app/views.py

In our view, we will decide which template to use based on a condition. 

In this example, we're using a fictional `template_version` variable to decide which template to use:

```python
# app/views.py

from django.shortcuts import render, get_object_or_404
from .models import Collection

def index(request):
    collection = get_object_or_404(Collection, slug='some-slug')

    // Decide which template to use
    if template_version == 'v1':
        template_name = 'index_v1.html'
    else:
        template_name = 'index_v2.html'

    return render(request, template_name, {'collection': collection})
```

In this case, `template_version` could come from a: 

1. variable that you define based on your needs
2. model
3. session
4. cookie
5. URL parameter
6. etc.

## Template Files

Finally, we create the templates that our view may use. 

Create 'index_v1.html' and 'index_v2.html' in your app's templates directory:

- app/templates/app/index_v1.html
- app/templates/app/index_v2.html

```html
<!-- base.html -->

<body>
    {% block content %}{% endblock %}
</body>
```

```html
<!-- index_v1.html -->

{% extends "base.html" %}

{% block content %}
    <!-- your html here -->
{% endblock %}
```

```html
<!-- index_v2.html -->

{% extends "base.html" %}

{% block content %}
    <!-- your html here -->
{% endblock %}
```

You can design these templates as you need, and Django will select which one to use based on the logic in your view.

With this setup, you can serve different templates for the same view in Django, allowing for different page designs for the same URL.